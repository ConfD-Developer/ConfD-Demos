# nginx -p . -c nginx/nginx.conf

# BCP REFERENCES:
# http://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
# https://gist.github.com/plentz/6737338
# https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
# https://calomel.org/nginx.html
# https://gist.github.com/mtigas/4237872 # TODO
# http://blog.themillhousegroup.com/2013/05/
# nginx-as-cors-enabled-https-proxy.html # TODO

daemon off;                                             # DEV ONLY
master_process off;                                     # DEV ONLY

# user www-data;                                          # CHANGEME
worker_processes auto;
pid nginx/pid;

events {
    worker_connections 1024;
}

http {
    access_log nginx.access.log combined;               # CHANGEME
    error_log nginx.error.log error;                    # CHANGEME
    rewrite_log on;                                     # DEV ONLY
    error_log stderr notice;                            # DEV ONLY

    upstream proxy {
        server 127.0.0.1:8008;                          # CHANGEME
        server 127.0.0.1:8080 backup;                   # CHANGEME
    }

    server {
        include conf.d/misc.conf;

        include conf.d/sec.overflow.conf;
        include conf.d/sec.browser.conf;
        # include conf.d/sec.cors.conf;                   # TODO
        include conf.d/sec.misc.conf;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = / {
            return 301 /index.html;
        }

        location ^~ / {
            # root html;                                 # CHANGEME
            try_files $uri /$uri @proxy;
        }

        location @proxy {
            internal;
            proxy_pass http://proxy;
            include conf.d/proxy.conf;
        }

        include conf.d/perf.timeout.conf;
        include conf.d/perf.gzip.conf;
        include conf.d/perf.cache.conf;

        # HTTP
        # listen *:80;
        listen *:8090;                                 # CHANGEME
        #include conf.d/sec.ssl.redirect.conf;

        # HTTPS
        # listen *:443 ssl;
        # listen *:8899 ssl;                             # CHANGEME
        # ssl_certificate ../ca_cert/ca.cert;            # CHANGEME
        # ssl_certificate_key ../ca_cert/private/ca.key; # CHANGEME
        include conf.d/sec.ssl.conf;
        # include conf.d/sec.ssl.only.conf;
    }
}
