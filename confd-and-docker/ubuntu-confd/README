A minimal ConfD image
=====================

Build a ConfD docker container based on Debian Stretch.

Prerequisites
-------------

A tar-ball containing the files for a minimal ConfD target
installation as described in section 31.3 Installing ConfD
on a target system from the ConfD User Guide.  Note that for older
ConfD releases target installation is described in section 29.3 in the
UG.  Also note that the exact list files required for target
installation might change between releases, this package includes
target package file lists for ConfD 6.7.3 and ConfD 7.1.

Dockerfile and instructions for creating the target installation
tar-ball can be found in the ../target-package-builder directory.

Steps
-----
1. Drop the target installation package into the resources directory.
2. Create the ConfD image

$ docker build --tag confd:v7.2.0.1 .

3. Run the docker image and expose the NETCONF, CLI and internal IPC ports.

$ docker run -it --rm -p 2022:2022 -p 2024:2024 -p 4565:4565 --init confd:v7...0.1
confd[7]: - Starting ConfD vsn: 7.2.0.1
confd[7]: - Loading file confd.fxs
confd[7]: - Loading file ietf-yang-types.fxs
confd[7]: - Loading file ietf-inet-types.fxs
confd[7]: - Loading file confd_cfg.fxs
confd[7]: - Loading file config.fxs
confd[7]: - Loading file netconf.fxs

...

4. Test the NETCONF interface.

$ netconf-console --hello
<?xml version="1.0" encoding="UTF-8"?>
<hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <capabilities>
    <capability>urn:ietf:params:netconf:base:1.0</capability>
    <capability>urn:ietf:params:netconf:base:1.1</capability>
    <capability>urn:ietf:params:netconf:capability:writable-running:1.0</capability>

    ...

    <capability>urn:ietf:params:xml:ns:yang:ietf-yang-types?module=ietf-yang-types&amp;revision=2013-07-15</capability>
    <capability>urn:ietf:params:xml:ns:netconf:base:1.0?module=ietf-netconf&amp;revision=2011-06-01</capability>
    <capability>urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults?module=ietf-netconf-with-defaults&amp;revision=2011-06-01</capability>
  </capabilities>
  <session-id>12</session-id>
</hello>

5 Test the CLI interface

$ ssh -p 2024 admin@localhost
admin@localhost's password:
Welcome to the ConfD CLI
admin connected from 172.17.0.1 using ssh on 6da798950429
admin@6da798950429 16:50:14> ?
Possible completions:
  clear      - Clear parameter
  commit     - Confirm a pending commit
  compare    - Compare running configuration to another configuration or a file
  configure  - Manipulate software configuration information
  describe   - Display transparent command information
  exit       - Exit the management session
  file       - Perform file operations
  help       - Provide help information
  id         - Show user id information
  monitor    - Real-time debugging
  ping       - Ping a host
  quit       - Exit the management session
  request    - Make system-level requests
  script     - Script actions
  set        - Set CLI properties
  set-path   - Set relative show path
  show       - Show information about the system
  source     - File to source
  top        - Exit to top level and optionally run command
  traceroute - Trace the route to a remote host
  up         - Exit one level of configuration
admin@6da798950429 16:50:14>

Note 1: the default CLI is Juniper style.  This can be changed in
confd.conf, see confd.conf(5) man-page.

Note 2: In order to make it easy to run a quick test as I did here,
this container use default locations for CDB
($CONFD_DIR/var/confd/cdb) and $CONFD_DIR/etc/confdconfd.conf.  This
is obviously not realistic and in production both should reside in
separate volumes outside the running container.  This is easily
achieved by passing a different confd.conf location when starting
ConfD.
